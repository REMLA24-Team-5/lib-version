# Only trigger on tags
name: Release
on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Parse version info from tag
        run: |
          # GITHUB_REF is like refs/tags/v2.3.5, so strip the first 11 chars
          VERSION=$(echo "${{ github.ref }}" | sed -e 's/refs\/tags\/v//' -e 's/\./\\./g')
          echo "version=$VERSION" >> $GITHUB_ENV
          
          #get highest tag number
          VERSION=`git describe --abbrev=0 --tags`

          #replace . with space so can split into an array
          VERSION_BITS=(${VERSION//./ })

          #get number parts and increase last one by 1
          VNUM1=${VERSION_BITS[0]}
          VNUM2=${VERSION_BITS[1]}
          VNUM3=${VERSION_BITS[2]}
          VNUM3=$((VNUM3+1))

          #create new tag
          NEW_TAG="$VNUM1.$VNUM2.$VNUM3"
          echo "new_tag=$NEW_TAG" >> $GITHUB_ENV
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install & configure Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          version: 1.5.1

      - name: Update poetry package version
        run: poetry version ${{ env.new_tag }}

      - name: Commit and push new version
        run: |
          git status # This is just to check if the git config worked
          git pull origin main # In case any changes were made since checkout
          git add pyproject.toml # Add dependency version changes
          git commit -m "Update project version to ${{ env.new_tag }} [skip ci]"
          git tag ${{ env.new_tag }} -m "Release ${{ env.new_tag }}"
          git push --set-upstream origin $(git branch --show-current) --follow-tags
